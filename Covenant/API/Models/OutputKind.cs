// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Covenant.API.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for OutputKind.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum OutputKind
    {
        [EnumMember(Value = "consoleApplication")]
        ConsoleApplication,
        [EnumMember(Value = "windowsApplication")]
        WindowsApplication,
        [EnumMember(Value = "dynamicallyLinkedLibrary")]
        DynamicallyLinkedLibrary,
        [EnumMember(Value = "netModule")]
        NetModule,
        [EnumMember(Value = "windowsRuntimeMetadata")]
        WindowsRuntimeMetadata,
        [EnumMember(Value = "windowsRuntimeApplication")]
        WindowsRuntimeApplication
    }
    internal static class OutputKindEnumExtension
    {
        internal static string ToSerializedValue(this OutputKind? value)
        {
            return value == null ? null : ((OutputKind)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this OutputKind value)
        {
            switch( value )
            {
                case OutputKind.ConsoleApplication:
                    return "consoleApplication";
                case OutputKind.WindowsApplication:
                    return "windowsApplication";
                case OutputKind.DynamicallyLinkedLibrary:
                    return "dynamicallyLinkedLibrary";
                case OutputKind.NetModule:
                    return "netModule";
                case OutputKind.WindowsRuntimeMetadata:
                    return "windowsRuntimeMetadata";
                case OutputKind.WindowsRuntimeApplication:
                    return "windowsRuntimeApplication";
            }
            return null;
        }

        internal static OutputKind? ParseOutputKind(this string value)
        {
            switch( value )
            {
                case "consoleApplication":
                    return OutputKind.ConsoleApplication;
                case "windowsApplication":
                    return OutputKind.WindowsApplication;
                case "dynamicallyLinkedLibrary":
                    return OutputKind.DynamicallyLinkedLibrary;
                case "netModule":
                    return OutputKind.NetModule;
                case "windowsRuntimeMetadata":
                    return OutputKind.WindowsRuntimeMetadata;
                case "windowsRuntimeApplication":
                    return OutputKind.WindowsRuntimeApplication;
            }
            return null;
        }
    }
}
