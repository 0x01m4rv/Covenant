@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Identity
@using Covenant.Models.Covenant
@*@inject UserManager<CovenantUser> UserManager*@
@inject NavigationManager NavigationManager
@inject IJSRuntime IJSRuntime

@*
<div class="covenant-logo">
    <img class="mb-5" src="/images/covenant-white.png" height="175" width="602">
    @if (!UserManager.Users.Any())
    {
        <form class="form-signin">
            <h1 class="h5 text-white">Register Initial User</h1>
            <input id="UserName" name="UserName" @bind="CovenantUserRegister.UserName" class="form-control mb-3" placeholder="Username" required autofocus>
            <input id="Password" name="Password" @bind="CovenantUserRegister.Password" class="form-control" placeholder="Password" type="password" required>
            <input id="ConfirmPassword" name="ConfirmPassword" @bind="CovenantUserRegister.ConfirmPassword" class="form-control mb-3" placeholder="Confirm Password" type="password" required>
            <button type="button" @onclick="(e => OnRegister.InvokeAsync(CovenantUserRegister))" class="btn btn-lg btn-outline-primary btn-block">Register</button>
        </form>
    }
    else
    {
        <form class="form-signin">
            <input id="UserName" name="UserName" @bind="CovenantUserLogin.UserName" class="form-control" placeholder="Username" required autofocus>
            <input id="Password" name="Password" @bind="CovenantUserLogin.Password" class="form-control mb-3" placeholder="Password" type="password" required>
            <button type="button" @onclick="(e => OnLogin.InvokeAsync(CovenantUserLogin))" class="btn btn-lg btn-outline-primary btn-block">Login</button>
        </form>
    }
</div>
*@

@code {
    [Parameter]
    public CovenantUserRegister CovenantUserRegister { get; set; }

    [Parameter]
    public CovenantUserLogin CovenantUserLogin { get; set; }

    [Parameter]
    public EventCallback<CovenantUserRegister> OnRegister { get; set; }

    [Parameter]
    public EventCallback<CovenantUserLogin> OnLogin { get; set; }

    protected override void OnInitialized()
    {
        try
        {
            NavigationManager.NavigateTo("/covenantuser/login");
        }
        catch (NavigationException) { }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await IJSRuntime.InvokeAsync<string>("RedirectToUrl", "/covenantuser/login");
    }
}
