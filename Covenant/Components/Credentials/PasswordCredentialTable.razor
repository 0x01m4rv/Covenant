@using Microsoft.JSInterop
@using Covenant.Models.Covenant
@using Covenant.Components.Shared
@inject IJSRuntime IJSRuntime

<CovenantTable IsSearchable="IsSearchable" IsSortable="IsSortable" IsPaginated="IsPaginated" PageLength="PageLength" Items="PasswordCredentials.ToList()" class="table table-hover">
    <TableHeader>
        <SortableTableHeader TItem="CapturedPasswordCredential" TItem2="string" GetSortableProperty="(credential) => credential.Domain">
            <HeaderContent>Domain</HeaderContent>
        </SortableTableHeader>
        <SortableTableHeader TItem="CapturedPasswordCredential" TItem2="string" GetSortableProperty="(credential) => credential.Username">
            <HeaderContent>Username</HeaderContent>
        </SortableTableHeader>
        <SortableTableHeader TItem="CapturedPasswordCredential" TItem2="string" GetSortableProperty="(credential) => credential.Password">
            <HeaderContent>Password</HeaderContent>
        </SortableTableHeader>
    </TableHeader>
    <TableRow Context="credential">
        <FilterableTableRow Item="credential" IsDisplayed="IsRowDisplayed">
            <RowContent>
                <td>@credential.Domain</td>
                <td>@credential.Username</td>
                <td>@credential.Password</td>
            </RowContent>
        </FilterableTableRow>
    </TableRow>
</CovenantTable>

@code {
    [Parameter]
    public IEnumerable<CapturedPasswordCredential> PasswordCredentials { get; set; }

    [Parameter]
    public bool IsSearchable { get; set; } = false;

    [Parameter]
    public bool IsSortable { get; set; } = true;

    [Parameter]
    public bool IsPaginated { get; set; } = true;

    [Parameter]
    public int PageLength { get; set; } = 10;

    private bool IsRowDisplayed(CapturedPasswordCredential credential, string SearchTerm)
    {
        return SearchTerm == string.Empty ||
            credential.Domain.Contains(SearchTerm, StringComparison.CurrentCultureIgnoreCase) ||
            credential.Username.Contains(SearchTerm, StringComparison.CurrentCultureIgnoreCase) ||
            credential.Password.Contains(SearchTerm, StringComparison.CurrentCultureIgnoreCase);
    }
}